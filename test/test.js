/*global describe, it */
'use strict';
var assert = require('assert');
var deviationdetective = require('../');

describe('deviationdetective node module', function () {
/*
  it('must have at least one test', function () {
    deviationdetective.compareLines();
    assert(false, 'I was too lazy to write any tests. Shame on me.');
  });
    */

  describe('.compareLines()', function() {
    it('should compare two geojson lines', function() {
        //Test goes here
        var featureCollection = { "type": "FeatureCollection", "features": [ { "type": "Feature", "properties": {}, "geometry": { "type": "LineString", "coordinates": [ [ -95.3778076171875, 29.7453016622136 ], [ -95.537109375, 29.76437737516313 ], [ -95.77880859375, 29.77391386999227 ], [ -95.9161376953125, 29.850173125689896 ], [ -96.097412109375, 29.869228848968312 ], [ -96.3336181640625, 29.850173125689896 ], [ -96.4324951171875, 29.750070930806785 ], [ -96.8609619140625, 29.635545914466675 ], [ -97.0037841796875, 29.563901551414443 ], [ -97.196044921875, 29.44438130948883 ], [ -97.3443603515625, 29.23847708592805 ], [ -97.3992919921875, 29.036960648558267 ], [ -97.40478515625, 28.945668833650508 ], [ -97.3992919921875, 28.555576049185973 ], [ -97.46520996093749, 28.41555985166584 ], [ -97.58056640625, 28.246327971048842 ], [ -97.62451171875, 28.154346532344004 ], [ -97.62451171875, 28.081673729044283 ], [ -97.61352539062499, 28.004101830368654 ], [ -97.58056640625, 27.97014654331592 ], [ -97.5311279296875, 27.907058371121995 ], [ -97.525634765625, 27.86336037597851 ], [ -97.44873046875, 27.800209937418252 ], [ -97.437744140625, 27.741884632507087 ], [ -97.3773193359375, 27.68839232178566 ], [ -97.32873916625975, 27.714552883800415 ] ] } }, { "type": "Feature", "properties": {}, "geometry": { "type": "LineString", "coordinates": [ [ -95.38055419921875, 29.746494000631543 ], [ -95.53436279296875, 29.76318524947452 ], [ -95.58380126953125, 29.766761583985765 ], [ -95.67855834960938, 29.77152983140312 ], [ -95.78018188476562, 29.772721857791275 ], [ -96.43386840820312, 29.74887863492848 ], [ -96.85821533203125, 29.636739555909326 ], [ -97.19741821289062, 29.44677309638942 ], [ -97.34573364257812, 29.242072000357226 ], [ -97.40066528320312, 29.033358552757804 ], [ -97.40066528320312, 28.559194693397508 ], [ -97.46520996093749, 28.416767680833228 ], [ -97.58056640625, 28.248747465587257 ], [ -97.62588500976562, 28.153135722683505 ], [ -97.62588500976562, 28.080462098478346 ], [ -97.61215209960938, 28.004101830368654 ], [ -97.5311279296875, 27.908271952541778 ], [ -97.52700805664062, 27.86336037597851 ], [ -97.44873046875, 27.798995145869444 ], [ -97.44049072265625, 27.74066918959956 ], [ -97.37594604492188, 27.68839232178566 ], [ -97.32925415039062, 27.715141756723987 ] ] } } ] };
        var firstLine = featureCollection.features[0];
        var secondLine = featureCollection.features[1];
        //This is the distance in decimal degrees that the points must deviate to trigger separation.
        var threshold = .025;


        var deviations = deviationdetective.compareLines(firstLine, secondLine, threshold, true);

        expect(deviations).to.have.a.property("type", "FeatureCollection");

    });
  });
});
